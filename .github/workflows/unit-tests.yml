name: Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    name: Backend Unit Tests (Java/Maven)
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Backend Tests
        working-directory: ./api/app
        run: mvn test -DfailIfNoTests=false

      - name: Upload Backend Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results
          path: api/app/target/surefire-reports/

  frontend-tests:
    runs-on: ubuntu-latest
    name: Frontend Unit Tests (TypeScript/Jest)
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.14.0'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            web/node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('web/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup Buf CLI
        uses: bufbuild/buf-setup-action@v1
        with:
          version: '1.28.1'

      - name: Generate Protocol Buffer code
        working-directory: ./proto
        run: buf generate

      - name: Install Frontend Dependencies
        working-directory: ./web
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript Type Check
        working-directory: ./web
        run: pnpm run typecheck

      - name: Run Frontend Tests
        working-directory: ./web
        run: pnpm test --coverage --watchAll=false --passWithNoTests

      - name: Upload Frontend Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-test-results
          path: web/coverage/

  unit-tests-summary:
    runs-on: ubuntu-latest
    name: Unit Tests Summary
    needs: [backend-tests, frontend-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "Backend Tests: ${{ needs.backend-tests.result }}"
          echo "Frontend Tests: ${{ needs.frontend-tests.result }}"
          
          if [[ "${{ needs.backend-tests.result }}" == "failure" || "${{ needs.frontend-tests.result }}" == "failure" ]]; then
            echo "❌ Some tests failed"
            exit 1
          else
            echo "✅ All tests passed"
          fi