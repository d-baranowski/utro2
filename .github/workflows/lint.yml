name: Linting

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'api/**'
      - 'web/**'
      - 'proto/**'
      - '.github/workflows/lint.yml'
  push:
    branches:
      - main
      - develop
    paths:
      - 'api/**'
      - 'web/**'
      - 'proto/**'
      - '.github/workflows/lint.yml'

jobs:
  backend-lint:
    name: Backend Linting (Java)
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Checkstyle
        working-directory: ./api/app
        run: mvn checkstyle:check

      - name: Run SpotBugs
        working-directory: ./api/app
        run: mvn spotbugs:check

      - name: Upload backend lint results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: backend-lint-results
          path: |
            api/app/target/checkstyle-result.xml
            api/app/target/spotbugsXml.xml

  frontend-lint:
    name: Frontend Linting (TypeScript)
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            web/node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('web/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        working-directory: ./web
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        working-directory: ./web
        run: pnpm run lint

      - name: Check Prettier formatting
        working-directory: ./web
        run: pnpm run format:check

      - name: Run TypeScript type checking
        working-directory: ./web
        run: pnpm run typecheck

      - name: Upload frontend lint results  
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: frontend-lint-results
          path: web/eslint-report.json

  lint-summary:
    name: Linting Summary
    runs-on: ubuntu-latest
    needs: [backend-lint, frontend-lint]
    if: always()
    
    steps:
      - name: Check linting results
        run: |
          echo "Backend linting: ${{ needs.backend-lint.result }}"
          echo "Frontend linting: ${{ needs.frontend-lint.result }}"
          
          if [[ "${{ needs.backend-lint.result }}" == "failure" || "${{ needs.frontend-lint.result }}" == "failure" ]]; then
            echo "❌ Some linting checks failed"
            exit 1
          else
            echo "✅ All linting checks passed"
          fi