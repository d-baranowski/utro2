// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: organisation/v1/organisation.proto
//
package com.inspirationparticle.utro.gen.organisation.v1

import com.connectrpc.Headers
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

public class OrganisationServiceClient(
  private val client: ProtocolClientInterface,
) : OrganisationServiceClientInterface {
  override suspend fun getMyOrganisations(request: OrganisationOuterClass.GetMyOrganisationsRequest,
      headers: Headers): ResponseMessage<OrganisationOuterClass.GetMyOrganisationsResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.OrganisationService/GetMyOrganisations",
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.GetMyOrganisationsRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.GetMyOrganisationsResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun createOrganisation(request: OrganisationOuterClass.CreateOrganisationRequest,
      headers: Headers): ResponseMessage<OrganisationOuterClass.CreateOrganisationResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.OrganisationService/CreateOrganisation",
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.CreateOrganisationRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.CreateOrganisationResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend
      fun searchOrganisations(request: OrganisationOuterClass.SearchOrganisationsRequest,
      headers: Headers): ResponseMessage<OrganisationOuterClass.SearchOrganisationsResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.OrganisationService/SearchOrganisations",
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.SearchOrganisationsRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.SearchOrganisationsResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend
      fun getOrganisationUsers(request: OrganisationOuterClass.GetOrganisationUsersRequest,
      headers: Headers): ResponseMessage<OrganisationOuterClass.GetOrganisationUsersResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.OrganisationService/GetOrganisationUsers",
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.GetOrganisationUsersRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.OrganisationOuterClass.GetOrganisationUsersResponse::class,
      StreamType.UNARY,
    ),
  )

}
