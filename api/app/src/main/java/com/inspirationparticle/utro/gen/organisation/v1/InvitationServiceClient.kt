// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: organisation/v1/invitation.proto
//
package com.inspirationparticle.utro.gen.organisation.v1

import com.connectrpc.Headers
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

public class InvitationServiceClient(
  private val client: ProtocolClientInterface,
) : InvitationServiceClientInterface {
  /**
   *  Create a new invitation
   */
  override suspend fun createInvitation(request: InvitationOuterClass.CreateInvitationRequest,
      headers: Headers): ResponseMessage<InvitationOuterClass.CreateInvitationResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.InvitationService/CreateInvitation",
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.CreateInvitationRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.CreateInvitationResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Get all invitations for an organization (admin only)
   */
  override suspend fun getInvitations(request: InvitationOuterClass.GetInvitationsRequest,
      headers: Headers): ResponseMessage<InvitationOuterClass.GetInvitationsResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.InvitationService/GetInvitations",
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.GetInvitationsRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.GetInvitationsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Accept or decline an invitation
   */
  override suspend fun respondToInvitation(request: InvitationOuterClass.RespondToInvitationRequest,
      headers: Headers): ResponseMessage<InvitationOuterClass.RespondToInvitationResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.InvitationService/RespondToInvitation",
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.RespondToInvitationRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.RespondToInvitationResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Cancel an invitation (admin only)
   */
  override suspend fun cancelInvitation(request: InvitationOuterClass.CancelInvitationRequest,
      headers: Headers): ResponseMessage<InvitationOuterClass.CancelInvitationResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "com.inspirationparticle.utro.gen.organisation.v1.InvitationService/CancelInvitation",
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.CancelInvitationRequest::class,
      com.inspirationparticle.utro.gen.organisation.v1.InvitationOuterClass.CancelInvitationResponse::class,
      StreamType.UNARY,
    ),
  )

}
