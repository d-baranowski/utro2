// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: utro/v1/therapist.proto
//
package com.inspirationparticle.utro.gen.v1

import com.connectrpc.Headers
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

/**
 *  Service definitions
 */
public class TherapistServiceClient(
  private val client: ProtocolClientInterface,
) : TherapistServiceClientInterface {
  override suspend fun getTherapist(request: TherapistProto.GetTherapistRequest, headers: Headers):
      ResponseMessage<TherapistProto.Therapist> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/GetTherapist",
      com.inspirationparticle.utro.gen.v1.TherapistProto.GetTherapistRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.Therapist::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun getTherapistBySlug(request: TherapistProto.GetTherapistBySlugRequest,
      headers: Headers): ResponseMessage<TherapistProto.Therapist> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/GetTherapistBySlug",
      com.inspirationparticle.utro.gen.v1.TherapistProto.GetTherapistBySlugRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.Therapist::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun getTherapistByUser(request: TherapistProto.GetTherapistByUserRequest,
      headers: Headers): ResponseMessage<TherapistProto.Therapist> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/GetTherapistByUser",
      com.inspirationparticle.utro.gen.v1.TherapistProto.GetTherapistByUserRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.Therapist::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun listTherapists(request: TherapistProto.ListTherapistsRequest,
      headers: Headers): ResponseMessage<TherapistProto.ListTherapistsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/ListTherapists",
      com.inspirationparticle.utro.gen.v1.TherapistProto.ListTherapistsRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.ListTherapistsResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun searchTherapists(request: TherapistProto.SearchTherapistsRequest,
      headers: Headers): ResponseMessage<TherapistProto.SearchTherapistsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/SearchTherapists",
      com.inspirationparticle.utro.gen.v1.TherapistProto.SearchTherapistsRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.SearchTherapistsResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend
      fun getTherapistProfileImage(request: TherapistProto.GetTherapistProfileImageRequest,
      headers: Headers): ResponseMessage<TherapistProto.GetTherapistProfileImageResponse> =
      client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/GetTherapistProfileImage",
      com.inspirationparticle.utro.gen.v1.TherapistProto.GetTherapistProfileImageRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.GetTherapistProfileImageResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  CRUD operations for therapist management
   */
  override suspend fun createTherapist(request: TherapistProto.CreateTherapistRequest,
      headers: Headers): ResponseMessage<TherapistProto.Therapist> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/CreateTherapist",
      com.inspirationparticle.utro.gen.v1.TherapistProto.CreateTherapistRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.Therapist::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun updateTherapist(request: TherapistProto.UpdateTherapistRequest,
      headers: Headers): ResponseMessage<TherapistProto.Therapist> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/UpdateTherapist",
      com.inspirationparticle.utro.gen.v1.TherapistProto.UpdateTherapistRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.Therapist::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun deleteTherapist(request: TherapistProto.DeleteTherapistRequest,
      headers: Headers): ResponseMessage<TherapistProto.DeleteTherapistResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/DeleteTherapist",
      com.inspirationparticle.utro.gen.v1.TherapistProto.DeleteTherapistRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.DeleteTherapistResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun publishTherapist(request: TherapistProto.PublishTherapistRequest,
      headers: Headers): ResponseMessage<TherapistProto.Therapist> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/PublishTherapist",
      com.inspirationparticle.utro.gen.v1.TherapistProto.PublishTherapistRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.Therapist::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun unpublishTherapist(request: TherapistProto.UnpublishTherapistRequest,
      headers: Headers): ResponseMessage<TherapistProto.Therapist> = client.unary(
    request,
    headers,
    MethodSpec(
    "utro.v1.TherapistService/UnpublishTherapist",
      com.inspirationparticle.utro.gen.v1.TherapistProto.UnpublishTherapistRequest::class,
      com.inspirationparticle.utro.gen.v1.TherapistProto.Therapist::class,
      StreamType.UNARY,
    ),
  )

}
