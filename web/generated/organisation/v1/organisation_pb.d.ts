// @generated by protoc-gen-es v2.6.3
// @generated from file organisation/v1/organisation.proto (package inspirationparticle.organisation.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file organisation/v1/organisation.proto.
 */
export declare const file_organisation_v1_organisation: GenFile;

/**
 * @generated from message inspirationparticle.organisation.v1.GetMyOrganisationsRequest
 */
export declare type GetMyOrganisationsRequest = Message<"inspirationparticle.organisation.v1.GetMyOrganisationsRequest"> & {
};

/**
 * Describes the message inspirationparticle.organisation.v1.GetMyOrganisationsRequest.
 * Use `create(GetMyOrganisationsRequestSchema)` to create a new message.
 */
export declare const GetMyOrganisationsRequestSchema: GenMessage<GetMyOrganisationsRequest>;

/**
 * @generated from message inspirationparticle.organisation.v1.GetMyOrganisationsResponse
 */
export declare type GetMyOrganisationsResponse = Message<"inspirationparticle.organisation.v1.GetMyOrganisationsResponse"> & {
  /**
   * @generated from field: repeated inspirationparticle.organisation.v1.Organisation organisations = 1;
   */
  organisations: Organisation[];
};

/**
 * Describes the message inspirationparticle.organisation.v1.GetMyOrganisationsResponse.
 * Use `create(GetMyOrganisationsResponseSchema)` to create a new message.
 */
export declare const GetMyOrganisationsResponseSchema: GenMessage<GetMyOrganisationsResponse>;

/**
 * @generated from message inspirationparticle.organisation.v1.CreateOrganisationRequest
 */
export declare type CreateOrganisationRequest = Message<"inspirationparticle.organisation.v1.CreateOrganisationRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message inspirationparticle.organisation.v1.CreateOrganisationRequest.
 * Use `create(CreateOrganisationRequestSchema)` to create a new message.
 */
export declare const CreateOrganisationRequestSchema: GenMessage<CreateOrganisationRequest>;

/**
 * @generated from message inspirationparticle.organisation.v1.CreateOrganisationResponse
 */
export declare type CreateOrganisationResponse = Message<"inspirationparticle.organisation.v1.CreateOrganisationResponse"> & {
  /**
   * @generated from field: inspirationparticle.organisation.v1.Organisation organisation = 1;
   */
  organisation?: Organisation;
};

/**
 * Describes the message inspirationparticle.organisation.v1.CreateOrganisationResponse.
 * Use `create(CreateOrganisationResponseSchema)` to create a new message.
 */
export declare const CreateOrganisationResponseSchema: GenMessage<CreateOrganisationResponse>;

/**
 * @generated from message inspirationparticle.organisation.v1.SearchOrganisationsRequest
 */
export declare type SearchOrganisationsRequest = Message<"inspirationparticle.organisation.v1.SearchOrganisationsRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;
};

/**
 * Describes the message inspirationparticle.organisation.v1.SearchOrganisationsRequest.
 * Use `create(SearchOrganisationsRequestSchema)` to create a new message.
 */
export declare const SearchOrganisationsRequestSchema: GenMessage<SearchOrganisationsRequest>;

/**
 * @generated from message inspirationparticle.organisation.v1.SearchOrganisationsResponse
 */
export declare type SearchOrganisationsResponse = Message<"inspirationparticle.organisation.v1.SearchOrganisationsResponse"> & {
  /**
   * @generated from field: repeated inspirationparticle.organisation.v1.Organisation organisations = 1;
   */
  organisations: Organisation[];
};

/**
 * Describes the message inspirationparticle.organisation.v1.SearchOrganisationsResponse.
 * Use `create(SearchOrganisationsResponseSchema)` to create a new message.
 */
export declare const SearchOrganisationsResponseSchema: GenMessage<SearchOrganisationsResponse>;

/**
 * @generated from message inspirationparticle.organisation.v1.Organisation
 */
export declare type Organisation = Message<"inspirationparticle.organisation.v1.Organisation"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: inspirationparticle.organisation.v1.MemberType member_type = 4;
   */
  memberType: MemberType;

  /**
   * @generated from field: google.protobuf.Timestamp joined_at = 5;
   */
  joinedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message inspirationparticle.organisation.v1.Organisation.
 * Use `create(OrganisationSchema)` to create a new message.
 */
export declare const OrganisationSchema: GenMessage<Organisation>;

/**
 * @generated from enum inspirationparticle.organisation.v1.MemberType
 */
export enum MemberType {
  /**
   * @generated from enum value: MEMBER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MEMBER_TYPE_MEMBER = 1;
   */
  MEMBER = 1,

  /**
   * @generated from enum value: MEMBER_TYPE_ADMINISTRATOR = 2;
   */
  ADMINISTRATOR = 2,
}

/**
 * Describes the enum inspirationparticle.organisation.v1.MemberType.
 */
export declare const MemberTypeSchema: GenEnum<MemberType>;

/**
 * @generated from service inspirationparticle.organisation.v1.OrganisationService
 */
export declare const OrganisationService: GenService<{
  /**
   * @generated from rpc inspirationparticle.organisation.v1.OrganisationService.GetMyOrganisations
   */
  getMyOrganisations: {
    methodKind: "unary";
    input: typeof GetMyOrganisationsRequestSchema;
    output: typeof GetMyOrganisationsResponseSchema;
  },
  /**
   * @generated from rpc inspirationparticle.organisation.v1.OrganisationService.CreateOrganisation
   */
  createOrganisation: {
    methodKind: "unary";
    input: typeof CreateOrganisationRequestSchema;
    output: typeof CreateOrganisationResponseSchema;
  },
  /**
   * @generated from rpc inspirationparticle.organisation.v1.OrganisationService.SearchOrganisations
   */
  searchOrganisations: {
    methodKind: "unary";
    input: typeof SearchOrganisationsRequestSchema;
    output: typeof SearchOrganisationsResponseSchema;
  },
}>;

